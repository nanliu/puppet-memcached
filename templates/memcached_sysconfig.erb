<%
def memory_in_mb(size)
  size=~ /^([.\d]+)?[\s+]?([a-zA-Z]+)?$/

  value = $1.to_f
  unit = $2
  unit ||= ''

  case unit
  when '':
    return (value / 1024 / 1024)
  when /kB/i:
    return (values / 1024)
  when /MB/i:
    return value
  when /GB/i:
    return (value * 1024)
  when /TB/i:
    return (value * 1024 * 1024)
  else
    raise Puppet::Error "Unknown memory unit #{unit}."
  end
end
-%>
# Managed by Puppet
PORT="<%= tcp_port %>"
USER="<%= user_real %>"
MAXCONN="<%= max_connections %>"
<% if has_variable?('max_memory') and ! max_memory.empty? -%>
CACHESIZE="<%= max_memory %>"
<% else -%>
CACHESIZE="<%= (memory_in_mb(memorysize) * 0.9).floor %>"
<% end
options = []
options << "-U #{udp_port}" if has_variable?('udp_port')
options << "-l #{listen_port}" if has_variable?('listen_port')
options << "-t #{processorcount}" if has_variable?('processorcount')
-%>
OPTIONS="<%= options.join(' ') %>"
